{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jufia\\\\OneDrive\\\\Documents\\\\Programmer\\\\mostrans-project\\\\src\\\\components\\\\CharacterLocation.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport CardItem from './CardItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterLocation = ({\n  data\n}) => {\n  _s();\n  var _data$characters;\n  const characterList = data === null || data === void 0 ? void 0 : (_data$characters = data.characters) === null || _data$characters === void 0 ? void 0 : _data$characters.results;\n  const [showList, setShowList] = useState(false);\n  const locationChar = JSON.parse(localStorage.getItem('Location')) || [];\n  if (locationChar && characterList) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: locationChar.map((loc, index) => {\n        const location = Object.keys(loc)[0];\n        const characterAssign = loc[location].map(id => {\n          return characterList.find(char => char.id === id.toString());\n        });\n        console.log(characterAssign);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            onClick: () => setShowList(!showList),\n            children: location\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), characterAssign && showList && characterAssign.map((char, index) => {\n            return /*#__PURE__*/_jsxDEV(CardItem, {\n              character: char\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 28\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-5\",\n    children: \"No Location Added Yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterLocation, \"J2rQ6tivoc+QXH2xyFTEW6HgXco=\");\n_c = CharacterLocation;\nexport default CharacterLocation;\nvar _c;\n$RefreshReg$(_c, \"CharacterLocation\");","map":{"version":3,"names":["React","useState","CardItem","jsxDEV","_jsxDEV","CharacterLocation","data","_s","_data$characters","characterList","characters","results","showList","setShowList","locationChar","JSON","parse","localStorage","getItem","className","children","map","loc","index","location","Object","keys","characterAssign","id","find","char","toString","console","log","onClick","fileName","_jsxFileName","lineNumber","columnNumber","character","_c","$RefreshReg$"],"sources":["C:/Users/jufia/OneDrive/Documents/Programmer/mostrans-project/src/components/CharacterLocation.jsx"],"sourcesContent":["import { React, useState } from 'react'\r\nimport CardItem from './CardItem'\r\n\r\nconst CharacterLocation = ({ data }) => {\r\n\r\n  const characterList = data?.characters?.results\r\n\r\n  const [showList, setShowList] = useState(false)\r\n  const locationChar = JSON.parse(localStorage.getItem('Location')) || []\r\n\r\n  if (locationChar && characterList) {\r\n    return (\r\n      <div className='text-center'>\r\n        {\r\n          locationChar.map((loc, index) => {\r\n            const location = Object.keys(loc)[0]\r\n\r\n            const characterAssign = loc[location].map((id) => {\r\n              return characterList.find((char) => char.id === id.toString());\r\n            });\r\n            \r\n\r\n            console.log(characterAssign)\r\n            return (\r\n              <div>\r\n                <h4 className='mt-4' key={index} onClick={() => setShowList(!showList)}>{location}</h4>\r\n                {characterAssign && showList &&\r\n                  characterAssign.map((char, index) => {\r\n                    return <CardItem character={char} key={index}/>\r\n                  })\r\n                }\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='text-center p-5'>\r\n      No Location Added Yet\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterLocation"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAEtC,MAAMC,aAAa,GAAGH,IAAI,aAAJA,IAAI,wBAAAE,gBAAA,GAAJF,IAAI,CAAEI,UAAU,cAAAF,gBAAA,uBAAhBA,gBAAA,CAAkBG,OAAO;EAE/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMa,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;EAEvE,IAAIJ,YAAY,IAAIL,aAAa,EAAE;IACjC,oBACEL,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EAExBN,YAAY,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC/B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC;QAEpC,MAAMK,eAAe,GAAGL,GAAG,CAACE,QAAQ,CAAC,CAACH,GAAG,CAAEO,EAAE,IAAK;UAChD,OAAOnB,aAAa,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAACG,QAAQ,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC;QAGFC,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC;QAC5B,oBACEvB,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAIe,SAAS,EAAC,MAAM;YAAae,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAAC,CAACD,QAAQ,CAAE;YAAAQ,QAAA,EAAEI;UAAQ,GAAvDD,KAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuD,CAAC,EACtFX,eAAe,IAAIf,QAAQ,IAC1Be,eAAe,CAACN,GAAG,CAAC,CAACS,IAAI,EAAEP,KAAK,KAAK;YACnC,oBAAOnB,OAAA,CAACF,QAAQ;cAACqC,SAAS,EAAET;YAAK,GAAMP,KAAK;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UACjD,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAEV;EAEA,oBACElC,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAC;EAEjC;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAzCKF,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}