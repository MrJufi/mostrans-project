{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jufia\\\\OneDrive\\\\Documents\\\\Programmer\\\\mostrans-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CharacterLocation from './components/CharacterLocation';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`;\n\n// const apolloClient = () => {\n//   return new ApolloClient({\n//     link: new HttpLink({\n//       uri: 'https://rickandmortyapi.com/graphql',\n//       cache: new InMemoryCache()\n//     })\n//   })\n// }\n\nfunction App() {\n  const client = apolloClient;\n  const resultData = CharacterListQuery;\n  console.log(resultData);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character-location\",\n          element: /*#__PURE__*/_jsxDEV(CharacterLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst CharacterListQuery = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHAR_LIST);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return data.characters;\n};\n_s(CharacterListQuery, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c2 = CharacterListQuery;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CharacterListQuery\");","map":{"version":3,"names":["CharacterLocation","Header","Home","Routes","Route","HashRouter","ApolloClient","InMemoryCache","ApolloProvider","gql","useQuery","jsxDEV","_jsxDEV","apolloClient","uri","cache","GET_CHAR_LIST","App","client","resultData","CharacterListQuery","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","_s","loading","error","data","message","characters","_c2","$RefreshReg$"],"sources":["C:/Users/jufia/OneDrive/Documents/Programmer/mostrans-project/src/App.js"],"sourcesContent":["import './../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport CharacterLocation from './components/CharacterLocation'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport {Routes, Route, HashRouter} from 'react-router-dom'\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useQuery } from '@apollo/client'\n\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`\n\n// const apolloClient = () => {\n//   return new ApolloClient({\n//     link: new HttpLink({\n//       uri: 'https://rickandmortyapi.com/graphql',\n//       cache: new InMemoryCache()\n//     })\n//   })\n// }\n\nfunction App() {\n  const client = apolloClient\n  \n  const resultData = CharacterListQuery\n\n  console.log(resultData)\n\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <Header/>\n        <Routes>\n            <Route path='/' element={<Home/>}/>\n            <Route path='/character-location' element={<CharacterLocation/>}/>\n        </Routes>\n      </HashRouter>\n    </ApolloProvider>\n\n  )\n}\n\nconst CharacterListQuery = () => {\n  const { loading, error, data } = useQuery(GET_CHAR_LIST)\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error : {error.message}</p>\n\n  console.log(data)\n\n\n  return data.characters\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}