{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jufia\\\\OneDrive\\\\Documents\\\\Programmer\\\\mostrans-project\\\\src\\\\App.js\";\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CharacterLocation from './components/CharacterLocation';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`;\nasync function App() {\n  let data;\n  const client = apolloClient;\n\n  // client.query({\n  //   query: GET_CHAR_LIST\n  // }).then((result) => data=result)\n\n  try {\n    const result = await client.query({\n      query: GET_CHAR_LIST\n    });\n    data = result.data;\n  } catch (err) {\n    console.error('Error fetching data:', err);\n  }\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character-location\",\n          element: /*#__PURE__*/_jsxDEV(CharacterLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CharacterLocation","Header","Home","Routes","Route","HashRouter","ApolloClient","InMemoryCache","ApolloProvider","gql","useQuery","jsxDEV","_jsxDEV","apolloClient","uri","cache","GET_CHAR_LIST","App","data","client","result","query","err","console","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/jufia/OneDrive/Documents/Programmer/mostrans-project/src/App.js"],"sourcesContent":["import './../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport CharacterLocation from './components/CharacterLocation'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport {Routes, Route, HashRouter} from 'react-router-dom'\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useQuery } from '@apollo/client'\n\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`\n\nasync function App() {\n  let data \n  const client = apolloClient\n  \n  // client.query({\n  //   query: GET_CHAR_LIST\n  // }).then((result) => data=result)\n\n  try {\n    const result = await client.query({\n      query: GET_CHAR_LIST\n    })\n\n    data = result.data\n  } catch (err) {\n    console.error('Error fetching data:', err)\n  }\n\n  console.log(data)\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <Header/>\n        <Routes>\n            <Route path='/' element={<Home/>}/>\n            <Route path='/character-location' element={<CharacterLocation/>}/>\n        </Routes>\n      </HashRouter>\n    </ApolloProvider>\n\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAO,wDAAwD;AAC/D,OAAOA,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAO,kBAAkB;AAE1D,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,YAAY,GAAG,IAAIP,YAAY,CAAC;EACpCQ,GAAG,EAAE,qCAAqC;EAC1CC,KAAK,EAAE,IAAIR,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMS,aAAa,GAAGP,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAeQ,GAAGA,CAAA,EAAG;EACnB,IAAIC,IAAI;EACR,MAAMC,MAAM,GAAGN,YAAY;;EAE3B;EACA;EACA;;EAEA,IAAI;IACF,MAAMO,MAAM,GAAG,MAAMD,MAAM,CAACE,KAAK,CAAC;MAChCA,KAAK,EAAEL;IACT,CAAC,CAAC;IAEFE,IAAI,GAAGE,MAAM,CAACF,IAAI;EACpB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;EAC5C;EAEAC,OAAO,CAACE,GAAG,CAACP,IAAI,CAAC;EACjB,oBACEN,OAAA,CAACJ,cAAc;IAACW,MAAM,EAAEA,MAAO;IAAAO,QAAA,eAC7Bd,OAAA,CAACP,UAAU;MAAAqB,QAAA,gBACTd,OAAA,CAACX,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTlB,OAAA,CAACT,MAAM;QAAAuB,QAAA,gBACHd,OAAA,CAACR,KAAK;UAAC2B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEpB,OAAA,CAACV,IAAI;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnClB,OAAA,CAACR,KAAK;UAAC2B,IAAI,EAAC,qBAAqB;UAACC,OAAO,eAAEpB,OAAA,CAACZ,iBAAiB;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGrB;AAACG,EAAA,GA/BchB,GAAG;AAiClB,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}