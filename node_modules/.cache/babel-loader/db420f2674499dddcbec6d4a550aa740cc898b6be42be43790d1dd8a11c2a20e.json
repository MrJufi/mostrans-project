{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jufia\\\\OneDrive\\\\Documents\\\\Programmer\\\\mostrans-project\\\\src\\\\App.js\";\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CharacterLocation from './components/CharacterLocation';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, HttpLink, ApolloProvider, Query, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`;\n\n// const apolloClient = () => {\n//   return new ApolloClient({\n//     link: new HttpLink({\n//       uri: 'https://rickandmortyapi.com/graphql',\n//       cache: new InMemoryCache()\n//     })\n//   })\n// }\n\nfunction App() {\n  const client = apolloClient;\n  client.query({\n    query: GET_CHAR_LIST\n  }).then(result => console.log(result));\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character-location\",\n          element: /*#__PURE__*/_jsxDEV(CharacterLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// const CharacterListQuery = () => {\n//   return (\n//     <Query query= {GET_CHAR_LIST}>\n//       {({ loading, error, data, client }) => {\n//         if (loading) return <div>Loading...</div>\n\n//         if (error) return <div>Error...</div>\n\n//         return <CharacterListQuery client={client} todos={data.todos}/>\n//       }}\n//     </Query>\n//   )\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CharacterLocation","Header","Home","Routes","Route","HashRouter","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","Query","gql","jsxDEV","_jsxDEV","apolloClient","uri","cache","GET_CHAR_LIST","App","client","query","then","result","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/jufia/OneDrive/Documents/Programmer/mostrans-project/src/App.js"],"sourcesContent":["import './../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport CharacterLocation from './components/CharacterLocation'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport {Routes, Route, HashRouter} from 'react-router-dom'\n\nimport { ApolloClient, InMemoryCache, HttpLink, ApolloProvider, Query, gql } from '@apollo/client'\n\nconst apolloClient = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`\n\n// const apolloClient = () => {\n//   return new ApolloClient({\n//     link: new HttpLink({\n//       uri: 'https://rickandmortyapi.com/graphql',\n//       cache: new InMemoryCache()\n//     })\n//   })\n// }\n\nfunction App() {\n  const client = apolloClient\n  \n  client.query({\n    query: GET_CHAR_LIST\n  }).then((result) => console.log(result))\n\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <Header/>\n        <Routes>\n            <Route path='/' element={<Home/>}/>\n            <Route path='/character-location' element={<CharacterLocation/>}/>\n        </Routes>\n      </HashRouter>\n    </ApolloProvider>\n\n  )\n}\n\n// const CharacterListQuery = () => {\n//   return (\n//     <Query query= {GET_CHAR_LIST}>\n//       {({ loading, error, data, client }) => {\n//         if (loading) return <div>Loading...</div>\n\n//         if (error) return <div>Error...</div>\n\n//         return <CharacterListQuery client={client} todos={data.todos}/>\n//       }}\n//     </Query>\n//   )\n// }\n\nexport default App\n"],"mappings":";AAAA,OAAO,wDAAwD;AAC/D,OAAOA,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAO,kBAAkB;AAE1D,SAASC,YAAY,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElG,MAAMC,YAAY,GAAG,IAAIR,YAAY,CAAC;EACpCS,GAAG,EAAE,qCAAqC;EAC1CC,KAAK,EAAE,IAAIT,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMU,aAAa,GAAGN,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASO,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGL,YAAY;EAE3BK,MAAM,CAACC,KAAK,CAAC;IACXA,KAAK,EAAEH;EACT,CAAC,CAAC,CAACI,IAAI,CAAEC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC;EAExC,oBACET,OAAA,CAACJ,cAAc;IAACU,MAAM,EAAEA,MAAO;IAAAM,QAAA,eAC7BZ,OAAA,CAACR,UAAU;MAAAoB,QAAA,gBACTZ,OAAA,CAACZ,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACThB,OAAA,CAACV,MAAM;QAAAsB,QAAA,gBACHZ,OAAA,CAACT,KAAK;UAAC0B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAElB,OAAA,CAACX,IAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnChB,OAAA,CAACT,KAAK;UAAC0B,IAAI,EAAC,qBAAqB;UAACC,OAAO,eAAElB,OAAA,CAACb,iBAAiB;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAAG,EAAA,GAjCSd,GAAG;AAmCZ,eAAeA,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}