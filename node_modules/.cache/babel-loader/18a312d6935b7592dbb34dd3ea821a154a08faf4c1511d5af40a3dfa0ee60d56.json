{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jufia\\\\OneDrive\\\\Documents\\\\Programmer\\\\mostrans-project\\\\src\\\\App.js\";\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CharacterLocation from './components/CharacterLocation';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, HttpLink, ApolloProvider, Query, gql } from '@apollo/client';\n\n// const apolloClient = new ApolloClient({\n//   uri: 'https://rickandmortyapi.com/graphql',\n//   cache: new InMemoryCache(),\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`;\nconst apolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://rickandmortyapi.com/graphql',\n      cache: new InMemoryCache()\n    })\n  });\n};\nfunction App() {\n  const client = apolloClient;\n  const {\n    data\n  } = this.props;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character-location\",\n          element: /*#__PURE__*/_jsxDEV(CharacterLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst CharacterListQuery = () => {\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_CHAR_LIST,\n    children: ({\n      loading,\n      error,\n      data,\n      client\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this);\n      return /*#__PURE__*/_jsxDEV(CharacterListQuery, {\n        client: client,\n        todos: data.todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CharacterListQuery;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CharacterListQuery\");","map":{"version":3,"names":["CharacterLocation","Header","Home","Routes","Route","HashRouter","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","Query","gql","jsxDEV","_jsxDEV","GET_CHAR_LIST","apolloClient","link","uri","cache","App","client","data","props","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","CharacterListQuery","query","loading","error","todos","_c2","$RefreshReg$"],"sources":["C:/Users/jufia/OneDrive/Documents/Programmer/mostrans-project/src/App.js"],"sourcesContent":["import './../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport CharacterLocation from './components/CharacterLocation'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport {Routes, Route, HashRouter} from 'react-router-dom'\n\nimport { ApolloClient, InMemoryCache, HttpLink, ApolloProvider, Query, gql } from '@apollo/client'\n\n// const apolloClient = new ApolloClient({\n//   uri: 'https://rickandmortyapi.com/graphql',\n//   cache: new InMemoryCache(),\n// });\n\nconst GET_CHAR_LIST = gql`\n  query getCharacterLists {\n    characters(page:1) {\n      results{\n        id\n        name\n        status\n        location {\n          id\n        }\n        image\n      }\n    }\n  }\n`\n\nconst apolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://rickandmortyapi.com/graphql',\n      cache: new InMemoryCache()\n    })\n  })\n}\n\nfunction App() {\n  const client = apolloClient\n  const { data } = this.props\n\n  console.log(data)\n\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <Header/>\n        <Routes>\n            <Route path='/' element={<Home/>}/>\n            <Route path='/character-location' element={<CharacterLocation/>}/>\n        </Routes>\n      </HashRouter>\n    </ApolloProvider>\n\n  )\n}\n\nconst CharacterListQuery = () => {\n  return (\n    <Query query= {GET_CHAR_LIST}>\n      {({ loading, error, data, client }) => {\n        if (loading) return <div>Loading...</div>\n\n        if (error) return <div>Error...</div>\n\n        return <CharacterListQuery client={client} todos={data.todos}/>\n      }}\n    </Query>\n  )\n}\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}